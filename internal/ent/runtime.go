// Code generated by entc, DO NOT EDIT.

package ent

import (
	"kExample/internal/ent/note"
	"kExample/internal/ent/schema"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	noteFields := schema.Note{}.Fields()
	_ = noteFields
	// noteDescName is the schema descriptor for name field.
	noteDescName := noteFields[0].Descriptor()
	// note.DefaultName holds the default value on creation for the name field.
	note.DefaultName = noteDescName.Default.(string)
	// note.NameValidator is a validator for the "name" field. It is called by the builders before save.
	note.NameValidator = noteDescName.Validators[0].(func(string) error)
	// noteDescCreatedAt is the schema descriptor for created_at field.
	noteDescCreatedAt := noteFields[2].Descriptor()
	// note.DefaultCreatedAt holds the default value on creation for the created_at field.
	note.DefaultCreatedAt = noteDescCreatedAt.Default.(func() time.Time)
}
